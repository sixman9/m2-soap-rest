<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	
	<!-- use an external property-placeholder file  -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:spring.properties" />
	</bean>

	<!-- holding properties for database connectivity <context:property-placeholder 
		location="classpath:jdbc.properties" /> -->
	<!-- JPA-Annotation related <tx:annotation-driven transaction-manager="transactionManager" 
		/> -->

	<!-- enabling annotation driven configuration / -->
	<context:annotation-config />	<!-- Spring-defined annotation-based bean 'setters' -->
	<context:component-scan base-package="com.soap.rest" /> <!-- find Spring-annotated bean 'stereotypes', by package -->

	<!-- Connect to a remote Spring-based service -->
	<!-- bean id="someSpringServiceRemote"
		class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="http://localhost:8080/someService/someSpringServiceRemote-httpinvoker" />
		<property name="serviceInterface" value="com.package..SomeServiceIntf" />
		<property name="httpInvokerRequestExecutor" ref="httpRequestExecutor" />
	</bean -->

</beans>